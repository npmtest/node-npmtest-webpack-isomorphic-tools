{"/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/test.js":"/* istanbul instrument in package npmtest_webpack_isomorphic_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/lib.npmtest_webpack_isomorphic_tools.js":"/* istanbul instrument in package npmtest_webpack_isomorphic_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_webpack_isomorphic_tools = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_webpack_isomorphic_tools = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-webpack-isomorphic-tools && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_webpack_isomorphic_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_webpack_isomorphic_tools\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_webpack_isomorphic_tools.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_webpack_isomorphic_tools.rollup.js'] =\n            local.assetsDict['/assets.npmtest_webpack_isomorphic_tools.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_webpack_isomorphic_tools.__dirname + '/lib.npmtest_webpack_isomorphic_tools.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _setImmediate2 = require('babel-runtime/core-js/set-immediate');\n\nvar _setImmediate3 = _interopRequireDefault(_setImmediate2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _path2 = require('path');\n\nvar _path3 = _interopRequireDefault(_path2);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _requireHacker = require('require-hacker');\n\nvar _requireHacker2 = _interopRequireDefault(_requireHacker);\n\nvar _uglifyJs = require('uglify-js');\n\nvar _uglifyJs2 = _interopRequireDefault(_uglifyJs);\n\nvar _log = require('./tools/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _synchronousHttp = require('./tools/synchronous http');\n\nvar _synchronousHttp2 = _interopRequireDefault(_synchronousHttp);\n\nvar _helpers = require('./helpers');\n\nvar _common = require('./common');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// using ES6 template strings\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\n\nvar webpack_isomorphic_tools = function () {\n\t// require() hooks for assets\n\n\tfunction webpack_isomorphic_tools(options) {\n\t\t(0, _classCallCheck3.default)(this, webpack_isomorphic_tools);\n\t\tthis.hooks = [];\n\t\tthis.cached_assets = [];\n\n\t\t// take the passed in options\n\t\tthis.options = (0, _helpers.convert_from_camel_case)((0, _helpers.clone)(options));\n\n\t\t// add missing fields, etc\n\t\t(0, _common.normalize_options)(this.options);\n\n\t\t// set development mode flag\n\t\tthis.options.development = process.env.NODE_ENV !== 'production';\n\n\t\t// set require-hacker debug mode if run in debug mode\n\t\tif (this.options.debug) {\n\t\t\t_requireHacker2.default.log.options.debug = true;\n\t\t}\n\n\t\t// logging\n\t\tthis.log = new _log2.default('webpack-isomorphic-tools', { debug: this.options.debug });\n\n\t\tthis.log.debug('instantiated webpack-isomorphic-tools v' + require('../package.json').version + ' with options', this.options);\n\t}\n\n\t// (deprecated)\n\t// sets development mode flag to whatever was passed (or true if nothing was passed)\n\t// (development mode allows asset hot reloading when used with webpack-dev-server)\n\n\n\t// used to keep track of cached assets and flush their caches on .refresh() call\n\n\n\t(0, _createClass3.default)(webpack_isomorphic_tools, [{\n\t\tkey: 'development',\n\t\tvalue: function development() {\n\t\t\t// display deprecation notice\n\t\t\tthis.log.error('`.development()` method is now deprecated ' + '(for server-side instance only, not for webpack plugin instance) ' + 'and has no effect. Set up a proper `process.env.NODE_ENV` variable instead: ' + 'it should be \"production\" for production, otherwise it assumes development. ' + 'The currently used mode is: ' + (this.options.development ? 'development' : 'production') + '. ' + '`process.env.NODE_ENV is: ' + process.env.NODE_ENV);\n\n\t\t\t// allows method chaining\n\t\t\treturn this;\n\t\t}\n\n\t\t// returns a mapping to read file paths for all the user specified asset types\n\t\t// along with a couple of predefined ones: javascripts and styles\n\n\t}, {\n\t\tkey: 'assets',\n\t\tvalue: function assets() {\n\t\t\t// when in development mode\n\t\t\tif (this.options.development) {\n\t\t\t\t// webpack and node.js start in parallel\n\t\t\t\t// so webpack-assets.json might not exist on the very first run\n\t\t\t\t// if a developer chose not to use the .server() method with a callback\n\t\t\t\t// (or if a developer chose not to wait for a Promise returned by the .server() method)\n\n\t\t\t\t// either go over a network\n\t\t\t\tif (this.options.port) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn (0, _synchronousHttp2.default)(this.options.port);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.log.error('Couldn\\'t contact webpack-isomorphic-tools plugin over HTTP. Using an empty stub for webpack assets map.');\n\t\t\t\t\t\tthis.log.error(error);\n\t\t\t\t\t\treturn (0, _common.default_webpack_assets)();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// or read it from disk\n\t\t\t\telse {\n\t\t\t\t\t\tif (!_fs2.default.existsSync(this.webpack_assets_path)) {\n\t\t\t\t\t\t\tthis.log.error('\"' + this.webpack_assets_path + '\" not found. Most likely it hasn\\'t yet been generated by Webpack. The most probable cause of this error is that you placed your server code outside of the callback in \"webpack_isomorphic_tools.server(path, callback)\" (or outside of the \".then()\" call if you are using promises API). Using an empty stub instead.');\n\t\t\t\t\t\t\treturn (0, _common.default_webpack_assets)();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\t// sanity check\n\t\t\tif (!this.webpack_assets_path) {\n\t\t\t\tthrow new Error('You seem to have forgotten to call the .server() method');\n\t\t\t}\n\n\t\t\treturn require(this.webpack_assets_path);\n\t\t}\n\n\t\t// clear the require.cache (only used in developer mode with webpack-dev-server)\n\n\t}, {\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\t// ensure this is development mode\n\t\t\tif (!this.options.development) {\n\t\t\t\tthrow new Error('.refresh() called in production mode. It shouldn\\'t be called in production mode because that would degrade website performance by discarding caches.');\n\t\t\t}\n\n\t\t\tthis.log.debug('flushing require() caches');\n\n\t\t\t// uncache webpack-assets.json file\n\t\t\t// this.log.debug(' flushing require() cache for webpack assets json file')\n\t\t\t// this.log.debug(` (was cached: ${typeof(require.cache[this.webpack_assets_path]) !== 'undefined'})`)\n\t\t\tdelete require.cache[this.webpack_assets_path];\n\n\t\t\t// uncache cached assets\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = (0, _getIterator3.default)(this.cached_assets), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar _path = _step.value;\n\n\t\t\t\t\tthis.log.debug(' flushing require() cache for ' + _path);\n\t\t\t\t\tdelete require.cache[_path];\n\t\t\t\t}\n\n\t\t\t\t// no assets are cached now\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.cached_assets = [];\n\t\t}\n\n\t\t// Makes `webpack-isomorphic-tools` aware of Webpack aliasing feature.\n\t\t// https://webpack.github.io/docs/resolving.html#aliasing\n\t\t// The `aliases` parameter corresponds to `resolve.alias`\n\t\t// in your Webpack configuration.\n\t\t// If this method is used it must be called before the `.server()` method.\n\n\t}, {\n\t\tkey: 'enable_aliasing',\n\t\tvalue: function enable_aliasing() {\n\t\t\tvar _this = this;\n\n\t\t\t// Mount a require() hook which will intercept all\n\t\t\t// `require(path)` calls and alias the `path` using Webpack \"aliases\".\n\t\t\tthis.alias_hook = _requireHacker2.default.resolver(function (path, module) {\n\t\t\t\t// returns aliased global filesystem path\n\t\t\t\treturn (0, _common.alias_hook)(path, module, _this.options.project_path, _this.options.alias, _this.log);\n\t\t\t});\n\n\t\t\t// allows method chaining\n\t\t\treturn this;\n\t\t}\n\n\t\t// Initializes server-side instance of `webpack-isomorphic-tools`\n\t\t// with the base path for your project, then calls `.register()`,\n\t\t// and after that calls .wait_for_assets(callback).\n\t\t//\n\t\t// The `project_path` parameter must be identical\n\t\t// to the `context` parameter of your Webpack configuration\n\t\t// and is needed to locate `webpack-assets.json`\n\t\t//  which is output by Webpack process.\n\t\t//\n\t\t// sets up \"project_path\" option\n\t\t// (this option is required on the server to locate webpack-assets.json)\n\n\t}, {\n\t\tkey: 'server',\n\t\tvalue: function server(project_path, callback) {\n\t\t\tvar _this2 = this;\n\n\t\t\t// project base path, required to locate webpack-assets.json\n\t\t\tthis.options.project_path = project_path;\n\n\t\t\t// resolve webpack-assets.json file path\n\t\t\tthis.webpack_assets_path = _path3.default.resolve(this.options.project_path, this.options.webpack_assets_file_path);\n\n\t\t\t// register require() hooks\n\t\t\tthis.register();\n\n\t\t\t// if Webpack aliases are supplied, enable aliasing\n\t\t\tif (this.options.alias) {\n\t\t\t\tthis.enable_aliasing();\n\t\t\t}\n\n\t\t\t// if Webpack `modulesDirectories` are supplied, enable them\n\t\t\tif (this.options.modules_directories) {\n\t\t\t\tthis.inject_modules_directories(this.options.modules_directories);\n\t\t\t}\n\n\t\t\t// inject helpers like require.context() and require.ensure()\n\t\t\tif (this.options.patch_require) {\n\t\t\t\tthis.log.debug('Patching Node.js require() function');\n\t\t\t\tthis.patch_require();\n\t\t\t}\n\n\t\t\t// when ready:\n\n\t\t\t// if callback is given, call it back\n\t\t\tif (callback) {\n\t\t\t\t// call back when ready\n\t\t\t\treturn this.wait_for_assets(callback);\n\t\t\t}\n\t\t\t// otherwise resolve a Promise\n\t\t\telse {\n\t\t\t\t\t// no callback given, return a Promise\n\t\t\t\t\treturn new _promise2.default(function (resolve, reject) {\n\t\t\t\t\t\treturn _this2.wait_for_assets(resolve);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t}\n\n\t\t// Registers Node.js require() hooks for the assets\n\t\t//\n\t\t// This is what makes the `requre()` magic work on server.\n\t\t// These `require()` hooks must be set before you `require()`\n\t\t// any of your assets\n\t\t// (e.g. before you `require()` any React components\n\t\t// `require()`ing your assets).\n\t\t//\n\t\t// read this article if you don't know what a \"require hook\" is\n\t\t// http://bahmutov.calepin.co/hooking-into-node-loader-for-fun-and-profit.html\n\n\t}, {\n\t\tkey: 'register',\n\t\tvalue: function register() {\n\t\t\tvar _this3 = this;\n\n\t\t\tthis.log.debug('registering require() hooks for assets');\n\n\t\t\t// // a helper array for extension matching\n\t\t\t// const extensions = []\n\t\t\t//\n\t\t\t// // for each user specified asset type,\n\t\t\t// // for each file extension,\n\t\t\t// // create an entry in the extension matching array\n\t\t\t// for (let asset_type of Object.keys(this.options.assets))\n\t\t\t// {\n\t\t\t// \tconst description = this.options.assets[asset_type]\n\t\t\t//\n\t\t\t// \tfor (let extension of description.extensions)\n\t\t\t// \t{\n\t\t\t// \t\textensions.push([`.${extension}`, description])\n\t\t\t// \t}\n\t\t\t// }\n\t\t\t//\n\t\t\t// // registers a global require() hook which runs\n\t\t\t// // before the default Node.js require() logic\n\t\t\t// this.asset_hook = require_hacker.global_hook('webpack-asset', (path, module) =>\n\t\t\t// {\n\t\t\t// \t// for each asset file extension\n\t\t\t// \tfor (let extension of extensions)\n\t\t\t// \t{\n\t\t\t// \t\t// if the require()d path has this file extension\n\t\t\t// \t\tif (ends_with(path, extension[0]))\n\t\t\t// \t\t{\n\t\t\t// \t\t\t// then require() it using webpack-assets.json\n\t\t\t// \t\t\treturn this.require(require_hacker.resolve(path, module), extension[1])\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// })\n\n\t\t\t// for each user specified asset type,\n\t\t\t// register a require() hook for each file extension of this asset type\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = (0, _getIterator3.default)((0, _keys2.default)(this.options.assets)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar asset_type = _step2.value;\n\n\t\t\t\t\tvar description = this.options.assets[asset_type];\n\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = (0, _getIterator3.default)(description.extensions), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar extension = _step3.value;\n\n\t\t\t\t\t\t\tthis.register_extension(extension, description);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// intercepts loader-powered require() paths\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.loaders_hook = _requireHacker2.default.global_hook('webpack-loaders', function (required_path, module) {\n\t\t\t\t// filter out non-loader paths\n\t\t\t\t// (ignore filesystem paths (both Linux and Windows)\n\t\t\t\t//  and non-loader paths)\n\t\t\t\tif ((0, _helpers.starts_with)(required_path, '/') || (0, _helpers.starts_with)(required_path, './') || (0, _helpers.starts_with)(required_path, '../') || required_path.indexOf(':') > 0 || required_path.indexOf('!') < 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar parts = required_path.split('!');\n\t\t\t\tvar local_asset_path = parts.pop();\n\n\t\t\t\t// extra measures taken here to not\n\t\t\t\t// confuse some legit require()d path\n\t\t\t\t// with a seemingly loader-powered one\n\t\t\t\tif (!(0, _helpers.starts_with)(local_asset_path, './') && !(0, _helpers.starts_with)(local_asset_path, '../')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tparts = parts.map(function (loader) {\n\t\t\t\t\tvar loader_parts = loader.split('?');\n\n\t\t\t\t\tif (!(0, _helpers.ends_with)(loader_parts[0], '-loader')) {\n\t\t\t\t\t\tloader_parts[0] += '-loader';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn './~/' + loader_parts.join('?');\n\t\t\t\t});\n\n\t\t\t\tvar global_asset_path = _requireHacker2.default.resolve(local_asset_path, module);\n\n\t\t\t\tvar path = parts.join('!') + '!' + _this3.normalize_asset_path(global_asset_path);\n\n\t\t\t\tvar asset = _this3.asset_source(path);\n\n\t\t\t\tif (asset === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar result = {\n\t\t\t\t\tsource: _this3.require_asset(asset, { require_cache_path: required_path + '.webpack-loaders' }),\n\t\t\t\t\tpath: global_asset_path\n\t\t\t\t};\n\n\t\t\t\treturn result;\n\t\t\t});\n\n\t\t\t// allows method chaining\n\t\t\treturn this;\n\t\t}\n\n\t\t// registers a require hook for a particular file extension\n\n\t}, {\n\t\tkey: 'register_extension',\n\t\tvalue: function register_extension(extension, description) {\n\t\t\tvar _this4 = this;\n\n\t\t\tthis.log.debug(' registering a require() hook for *.' + extension);\n\n\t\t\t// place the require() hook for this extension\n\t\t\tif (extension === 'json') {\n\t\t\t\tthis.hooks.push(_requireHacker2.default.hook(extension, function (path) {\n\t\t\t\t\t// special case for require('webpack-assets.json') and 'json' asset extension\n\t\t\t\t\tif (path === _this4.webpack_assets_path) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn _this4.require(path, description);\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthis.hooks.push(_requireHacker2.default.hook(extension, function (path) {\n\t\t\t\t\treturn _this4.require(path, description);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t// injects Webpack's `modulesDirectories` into Node.js module resolver\n\n\t}, {\n\t\tkey: 'inject_modules_directories',\n\t\tvalue: function inject_modules_directories(modules_directories) {\n\t\t\tmodules_directories = modules_directories.filter(function (x) {\n\t\t\t\treturn x !== 'node_modules';\n\t\t\t});\n\n\t\t\t// instrument Module._nodeModulePaths function\n\t\t\t// https://github.com/nodejs/node/blob/master/lib/module.js#L202\n\t\t\t//\n\t\t\tvar original_find_paths = require('module')._findPath;\n\t\t\t//\n\t\t\trequire('module')._findPath = function (request, paths) {\n\t\t\t\tpaths.map(function (a_path) {\n\t\t\t\t\tvar parts = a_path.split(_path3.default.sep);\n\t\t\t\t\tif (parts[parts.length - 1] === 'node_modules') {\n\t\t\t\t\t\tparts[parts.length - 1] = '';\n\t\t\t\t\t\treturn parts.join(_path3.default.sep);\n\t\t\t\t\t}\n\t\t\t\t}).filter(function (a_path) {\n\t\t\t\t\treturn a_path;\n\t\t\t\t}).forEach(function (a_path) {\n\t\t\t\t\tmodules_directories.forEach(function (modules_directory) {\n\t\t\t\t\t\tpaths.push(a_path + modules_directory);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn original_find_paths(request, paths);\n\t\t\t};\n\t\t}\n\n\t\t// injects helper functions into `require()` function\n\t\t// (such as `.context()` and `.ensure()`)\n\t\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/48#issuecomment-182878437\n\t\t// (this is a \"dirty\" way to do it but it works)\n\n\t}, {\n\t\tkey: 'patch_require',\n\t\tvalue: function patch_require() {\n\t\t\t// a source code of a function that\n\t\t\t// require()s all modules inside the `base` folder\n\t\t\t// and puts them into a hash map for further reference\n\t\t\t//\n\t\t\t// https://webpack.github.io/docs/context.html\n\t\t\t//\n\t\t\tvar require_context = 'require.context = function(base, scan_subdirectories, regular_expression)\\n\\t\\t{\\n\\t\\t\\tbase = require(\\'path\\').join(require(\\'path\\').dirname(module.filename), base)\\n\\n\\t\\t\\tvar contents = {}\\n\\n\\t\\t\\t// recursive function\\n\\t\\t\\tfunction read_directory(directory)\\n\\t\\t\\t{\\n\\t\\t\\t\\trequire(\\'fs\\').readdirSync(directory).forEach(function(child)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tvar full_path = require(\\'path\\').resolve(directory, child)\\n\\n\\t\\t\\t\\t\\tif (require(\\'fs\\').statSync(full_path).isDirectory())\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tif (scan_subdirectories)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tread_directory(full_path)\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tvar asset_path = require(\\'path\\').relative(base, full_path)\\n\\n\\t\\t\\t\\t\\t\\t// analogous to \"uniform_path\" from \"./common.js\"\\n\\t\\t\\t\\t\\t\\tasset_path = (asset_path[0] === \\'.\\' ? asset_path : (\\'./\\' + asset_path)).replace(/\\\\\\\\/g, \\'/\\')\\n\\n\\t\\t\\t\\t\\t\\tif (regular_expression && !regular_expression.test(asset_path))\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\treturn\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tcontents[asset_path] = full_path\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t})\\n\\t\\t\\t}\\n\\n\\t\\t\\tread_directory(base)\\n\\n\\t\\t\\tvar result = function(asset_path)\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn require(contents[asset_path])\\n\\t\\t\\t}\\n\\n\\t\\t\\tresult.keys = function()\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn Object.keys(contents)\\n\\t\\t\\t}\\n\\n\\t\\t\\tresult.resolve = function(asset_path)\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn contents[asset_path]\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result\\n\\t\\t};';\n\n\t\t\t// some code minification\n\t\t\trequire_context = _uglifyJs2.default.minify(require_context, { fromString: true }).code;\n\n\t\t\t// Source code for `require.ensure()`\n\t\t\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/84\n\t\t\tvar require_ensure = 'require.ensure=function(d,c){c(require)};';\n\n\t\t\tvar debug = this.log.debug.bind(this.log);\n\n\t\t\t// instrument Module.prototype._compile function\n\t\t\t// https://github.com/nodejs/node/blob/master/lib/module.js#L376-L380\n\t\t\t//\n\t\t\tvar original_compile = require('module').prototype._compile;\n\t\t\t//\n\t\t\trequire('module').prototype._compile = function (content, filename) {\n\t\t\t\t// inject it only in .js files\n\t\t\t\tif (!(0, _helpers.ends_with)(filename, '.js')) {\n\t\t\t\t\t// (the return value is supposed to be `undefined`)\n\t\t\t\t\treturn original_compile.call(this, content, filename);\n\t\t\t\t}\n\n\t\t\t\t// will be prepended to the module source code\n\t\t\t\tvar preamble = '';\n\n\t\t\t\t// inject it only in .js files which\n\t\t\t\t// might probably have `require.context` reference\n\t\t\t\tif (content.indexOf('require.context') >= 0) {\n\t\t\t\t\tdebug('Injecting require.context() into \"' + filename + '\"');\n\t\t\t\t\tpreamble += require_context;\n\t\t\t\t}\n\n\t\t\t\t// inject it only in .js files which\n\t\t\t\t// might probably have `require.ensure` reference\n\t\t\t\tif (content.indexOf('require.ensure') >= 0) {\n\t\t\t\t\tdebug('Injecting require.ensure() into \"' + filename + '\"');\n\t\t\t\t\tpreamble += require_ensure;\n\t\t\t\t}\n\n\t\t\t\t// If there is a preamble to prepend\n\t\t\t\tif (preamble) {\n\t\t\t\t\t// Account for \"use strict\" which is required to be in the beginning of the source code\n\t\t\t\t\tif ((0, _helpers.starts_with)(content, '\\'use strict\\'') || (0, _helpers.starts_with)(content, '\"use strict\"')) {\n\t\t\t\t\t\tpreamble = '\"use strict\";' + preamble;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// the \"dirty\" way\n\t\t\t\tcontent = preamble + content;\n\n\t\t\t\t// (the return value is supposed to be `undefined`)\n\t\t\t\treturn original_compile.call(this, content, filename);\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'normalize_asset_path',\n\t\tvalue: function normalize_asset_path(global_asset_path) {\n\t\t\t// sanity check\n\t\t\t/* istanbul ignore if */\n\t\t\tif (!this.options.project_path) {\n\t\t\t\tthrow new Error('You forgot to call the .server() method passing it your project\\'s base path');\n\t\t\t}\n\n\t\t\t// convert global asset path to local-to-the-project asset path\n\t\t\treturn (0, _common.normalize_asset_path)(global_asset_path, this.options.project_path);\n\t\t}\n\n\t\t// require()s an asset by a global path\n\n\t}, {\n\t\tkey: 'require',\n\t\tvalue: function require(global_asset_path, description) {\n\t\t\tthis.log.debug('require() called for ' + global_asset_path);\n\n\t\t\t// convert global asset path to local-to-the-project asset path\n\t\t\tvar asset_path = this.normalize_asset_path(global_asset_path);\n\n\t\t\t// if this filename is in the user specified exceptions list\n\t\t\t// (or is not in the user explicitly specified inclusion list)\n\t\t\t// then fall back to the normal require() behaviour\n\t\t\tif (!this.includes(asset_path, description) || this.excludes(asset_path, description)) {\n\t\t\t\tthis.log.debug(' skipping require call for ' + asset_path);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// find this asset in the list\n\t\t\tvar asset = this.asset_source(asset_path);\n\n\t\t\t// if the asset was not found in the list, output an error\n\t\t\tif (asset === undefined) {\n\t\t\t\tthis.log.error('asset not found: ' + asset_path);\n\t\t\t}\n\n\t\t\treturn this.require_asset(asset, { require_cache_path: global_asset_path });\n\t\t}\n\n\t\t// require()s an asset by it source\n\n\t}, {\n\t\tkey: 'require_asset',\n\t\tvalue: function require_asset(asset, options) {\n\t\t\t// this.log.debug(`require() called for ${asset_path}`)\n\n\t\t\t// track cached assets (only in development mode)\n\t\t\tif (this.options.development) {\n\t\t\t\t// mark this asset as cached\n\t\t\t\tthis.cached_assets.push(options.require_cache_path);\n\t\t\t}\n\n\t\t\t// return CommonJS module source for this asset\n\t\t\treturn _requireHacker2.default.to_javascript_module_source(asset);\n\t\t}\n\n\t\t// returns asset source by path (looks it up in webpack-assets.json)\n\n\t}, {\n\t\tkey: 'asset_source',\n\t\tvalue: function asset_source(asset_path) {\n\t\t\tthis.log.debug(' requiring ' + asset_path);\n\n\t\t\t// Webpack replaces `node_modules` with `~`.\n\t\t\t// I don't know how exactly it decides whether to\n\t\t\t// replace `node_modules` with `~` or not\n\t\t\t// so it will be a guess.\n\t\t\tfunction possible_webpack_paths(asset_path) {\n\t\t\t\t// Webpack always replaces project's own `node_modules` with `~`\n\t\t\t\tif ((0, _helpers.starts_with)(asset_path, './node_modules/')) {\n\t\t\t\t\tasset_path = asset_path.replace('./node_modules/', './~/');\n\t\t\t\t}\n\n\t\t\t\t// if there are any `node_modules` left,\n\t\t\t\t// supposing the count is N,\n\t\t\t\t// then there are 2 to the power of N possible guesses\n\t\t\t\t// on how webpack path might look like.\n\t\t\t\tvar parts = asset_path.split('/node_modules/');\n\n\t\t\t\tfunction construct_guesses(parts) {\n\t\t\t\t\tif (parts.length === 1) {\n\t\t\t\t\t\treturn [parts];\n\t\t\t\t\t}\n\n\t\t\t\t\tvar last = parts.pop();\n\t\t\t\t\tvar rest = construct_guesses(parts);\n\n\t\t\t\t\tvar guesses = [];\n\n\t\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator4 = (0, _getIterator3.default)(rest), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\t\tvar guess = _step4.value;\n\n\t\t\t\t\t\t\tvar one = (0, _helpers.clone)(guess);\n\t\t\t\t\t\t\tone.push('/~/');\n\t\t\t\t\t\t\tone.push(last);\n\n\t\t\t\t\t\t\tvar two = (0, _helpers.clone)(guess);\n\t\t\t\t\t\t\ttwo.push('/node_modules/');\n\t\t\t\t\t\t\ttwo.push(last);\n\n\t\t\t\t\t\t\tguesses.push(one);\n\t\t\t\t\t\t\tguesses.push(two);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn guesses;\n\t\t\t\t}\n\n\t\t\t\treturn construct_guesses(parts);\n\t\t\t}\n\n\t\t\t// get real file path list\n\t\t\tvar assets = this.assets().assets;\n\n\t\t\tvar possible_webpack_asset_paths = possible_webpack_paths(asset_path).map(function (path) {\n\t\t\t\treturn path.join('');\n\t\t\t});\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = (0, _getIterator3.default)(possible_webpack_asset_paths), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar webpack_asset_path = _step5.value;\n\n\t\t\t\t\tif (possible_webpack_asset_paths.length > 1) {\n\t\t\t\t\t\tthis.log.debug('  trying \"' + webpack_asset_path + '\"');\n\t\t\t\t\t}\n\n\t\t\t\t\t// find this asset in the real file path list\n\t\t\t\t\tvar asset = assets[webpack_asset_path];\n\n\t\t\t\t\tif ((0, _helpers.exists)(asset)) {\n\t\t\t\t\t\t// the asset was found in the list - return it\n\t\t\t\t\t\treturn asset;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if the asset was not found in the list, return nothing\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// unregisters require() hooks\n\n\t}, {\n\t\tkey: 'undo',\n\t\tvalue: function undo() {\n\t\t\t// for each user specified asset type,\n\t\t\t// unregister a require() hook for each file extension of this asset type\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = (0, _getIterator3.default)(this.hooks), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar hook = _step6.value;\n\n\t\t\t\t\thook.unmount();\n\t\t\t\t}\n\n\t\t\t\t// this.asset_hook.unmount()\n\n\t\t\t\t// unmount the aliasing hook (if mounted)\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.alias_hook) {\n\t\t\t\tthis.alias_hook.unmount();\n\t\t\t}\n\n\t\t\t// unmount require() hook which intercepts loader-powered require() paths\n\t\t\tif (this.loaders_hook) {\n\t\t\t\tthis.loaders_hook.unmount();\n\t\t\t}\n\t\t}\n\n\t\t// Checks if the required path should be excluded from the custom require() hook\n\n\t}, {\n\t\tkey: 'excludes',\n\t\tvalue: function excludes(path, options) {\n\t\t\t// if \"exclude\" parameter isn't specified, then exclude nothing\n\t\t\tif (!(0, _helpers.exists)(options.exclude)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// for each exclusion case\n\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\tvar _didIteratorError7 = false;\n\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator7 = (0, _getIterator3.default)(options.exclude), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\tvar exclude = _step7.value;\n\n\t\t\t\t\t// supports regular expressions\n\t\t\t\t\tif (exclude instanceof RegExp) {\n\t\t\t\t\t\tif (exclude.test(path)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// check for a compex logic match\n\t\t\t\t\telse if (typeof exclude === 'function') {\n\t\t\t\t\t\t\tif (exclude(path)) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// otherwise check for a simple textual match\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (exclude === path) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// no matches found.\n\t\t\t\t// returns false so that it isn't undefined (for testing purpose)\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t_iteratorError7 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Checks if the required path should be included in the custom require() hook\n\n\t}, {\n\t\tkey: 'includes',\n\t\tvalue: function includes(path, options) {\n\t\t\t// if \"include\" parameter isn't specified, then include everything\n\t\t\tif (!(0, _helpers.exists)(options.include)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// for each inclusion case\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = (0, _getIterator3.default)(options.include), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar include = _step8.value;\n\n\t\t\t\t\t// supports regular expressions\n\t\t\t\t\tif (include instanceof RegExp) {\n\t\t\t\t\t\tif (include.test(path)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// check for a compex logic match\n\t\t\t\t\telse if (typeof include === 'function') {\n\t\t\t\t\t\t\tif (include(path)) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// otherwise check for a simple textual match\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (include === path) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// no matches found.\n\t\t\t\t// returns false so that it isn't undefined (for testing purpose)\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Waits for webpack-assets.json to be created after Webpack build process finishes\n\t\t//\n\t\t// The callback is called when `webpack-assets.json` has been found\n\t\t// (it's needed for development because `webpack-dev-server`\n\t\t//  and your application server are usually run in parallel).\n\t\t//\n\n\t}, {\n\t\tkey: 'wait_for_assets',\n\t\tvalue: function wait_for_assets(done) {\n\t\t\tvar _this5 = this;\n\n\t\t\t// condition check interval\n\t\t\tvar check_interval = 300; // in milliseconds\n\t\t\tvar message_interval = 2000; // in milliseconds\n\n\t\t\t// show the message not too often\n\t\t\tvar message_timer = 0;\n\n\t\t\t// selfie\n\t\t\tvar tools = this;\n\n\t\t\t// waits for condition to be met, then proceeds\n\t\t\tfunction wait_for(condition, proceed) {\n\t\t\t\tfunction check() {\n\t\t\t\t\t// if the condition is met, then proceed\n\t\t\t\t\tif (condition()) {\n\t\t\t\t\t\treturn proceed();\n\t\t\t\t\t}\n\n\t\t\t\t\tmessage_timer += check_interval;\n\n\t\t\t\t\tif (message_timer >= message_interval) {\n\t\t\t\t\t\tmessage_timer = 0;\n\n\t\t\t\t\t\ttools.log.debug('(' + tools.webpack_assets_path + ' not found)');\n\t\t\t\t\t\ttools.log.info('(waiting for the first Webpack build to finish)');\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(check, check_interval);\n\t\t\t\t}\n\n\t\t\t\tcheck();\n\t\t\t}\n\n\t\t\t// wait for webpack-assets.json to be written to disk by Webpack\n\t\t\t// (setTimeout() for global.webpack_isomorphic_tools )\n\n\t\t\tvar ready_check = void 0;\n\n\t\t\t// either go over network\n\t\t\tif (this.options.development && this.options.port) {\n\t\t\t\tready_check = function ready_check() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t(0, _synchronousHttp2.default)(_this5.options.port);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (!(0, _helpers.starts_with)(error.message, 'Server responded with status code 404:\\nWebpack assets not generated yet') && !(0, _helpers.starts_with)(error.message, 'connect ECONNREFUSED') && !(0, _helpers.starts_with)(error.message, 'Request timed out after')) {\n\t\t\t\t\t\t\t_this5.log.error('Couldn\\'t contact webpack-isomorphic-tools plugin over HTTP. Using an empty stub for webpack assets map.');\n\t\t\t\t\t\t\t_this5.log.error(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\t// or read it from disk\n\t\t\telse {\n\t\t\t\t\tready_check = function ready_check() {\n\t\t\t\t\t\treturn _fs2.default.existsSync(_this5.webpack_assets_path);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t(0, _setImmediate3.default)(function () {\n\t\t\t\treturn wait_for(ready_check, done);\n\t\t\t});\n\n\t\t\t// allows method chaining\n\t\t\treturn this;\n\t\t}\n\t}]);\n\treturn webpack_isomorphic_tools;\n}();\n\n// Doesn't work with Babel 6 compiler\n// // alias camel case for those who prefer it\n// alias_properties_with_camel_case(webpack_isomorphic_tools.prototype)\n\n\nexports.default = webpack_isomorphic_tools;\nmodule.exports = exports['default'];\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/tools/log.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _safe = require('colors/safe');\n\nvar _safe2 = _interopRequireDefault(_safe);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Log = function () {\n\tfunction Log(preamble, options) {\n\t\t(0, _classCallCheck3.default)(this, Log);\n\n\t\tthis.options = options;\n\n\t\t// is prepended to console output\n\t\tthis.preamble = '[' + preamble + ']';\n\t}\n\n\t// outputs info to the log\n\n\n\t(0, _createClass3.default)(Log, [{\n\t\tkey: 'info',\n\t\tvalue: function info() {\n\t\t\tfor (var _len = arguments.length, parameters = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\tparameters[_key] = arguments[_key];\n\t\t\t}\n\n\t\t\tconsole.log(this.preamble, generate_log_message(parameters));\n\t\t}\n\n\t\t// outputs debugging info to the log\n\n\t}, {\n\t\tkey: 'debug',\n\t\tvalue: function debug() {\n\t\t\tif (this.options.debug) {\n\t\t\t\tfor (var _len2 = arguments.length, parameters = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\t\t\tparameters[_key2] = arguments[_key2];\n\t\t\t\t}\n\n\t\t\t\tconsole.log(this.preamble, '[debug]', generate_log_message(parameters));\n\t\t\t}\n\t\t}\n\n\t\t// outputs minor debugging info to the log\n\n\t}, {\n\t\tkey: 'trace',\n\t\tvalue: function trace() {\n\t\t\tif (this.options.debug) {\n\t\t\t\tfor (var _len3 = arguments.length, parameters = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t\t\t\t\tparameters[_key3] = arguments[_key3];\n\t\t\t\t}\n\n\t\t\t\tconsole.log(_safe2.default.gray(this.preamble, '[trace]', generate_log_message(parameters)));\n\t\t\t}\n\t\t}\n\n\t\t// outputs a warning to the log\n\n\t}, {\n\t\tkey: 'warning',\n\t\tvalue: function warning() {\n\t\t\tfor (var _len4 = arguments.length, parameters = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t\t\t\tparameters[_key4] = arguments[_key4];\n\t\t\t}\n\n\t\t\tconsole.log(_safe2.default.yellow(this.preamble, '[warning]', generate_log_message(parameters)));\n\t\t}\n\n\t\t// outputs an error to the log\n\n\t}, {\n\t\tkey: 'error',\n\t\tvalue: function error() {\n\t\t\tfor (var _len5 = arguments.length, parameters = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n\t\t\t\tparameters[_key5] = arguments[_key5];\n\t\t\t}\n\n\t\t\tconsole.log(_safe2.default.red(this.preamble, '[error]', generate_log_message(parameters)));\n\t\t}\n\t}]);\n\treturn Log;\n}();\n\n// transforms arguments to text\n\n\nexports.default = Log;\nfunction generate_log_message(parameters) {\n\t// преобразовать все аргументы функции в текстовый вид\n\treturn parameters.map(function (argument) {\n\t\t// преобразование объектов в строку\n\t\tif ((typeof argument === 'undefined' ? 'undefined' : (0, _typeof3.default)(argument)) === 'object') {\n\t\t\t// для ошибок - распечатывать стек вызовов\n\t\t\tif (argument instanceof Error) {\n\t\t\t\treturn argument.stack;\n\t\t\t}\n\t\t\t// для остальных объектов вызывать JSON.stringify()\n\t\t\treturn (0, _stringify2.default)(argument, null, 2);\n\t\t}\n\t\t// если undefined\n\t\tif (typeof argument === 'undefined') {\n\t\t\treturn '[undefined]';\n\t\t}\n\t\t// прочие переменные - просто .toString()\n\t\treturn argument.toString();\n\t})\n\t// собрать всё это в одну строку через пробел\n\t.reduce(function (message, argument) {\n\t\tif (message.length > 0) {\n\t\t\tmessage += ' ';\n\t\t}\n\t\treturn message + argument;\n\t}, '');\n}\nmodule.exports = exports['default'];\n//# sourceMappingURL=log.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/tools/synchronous http.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = http_request;\n\nvar _syncRequest = require('sync-request');\n\nvar _syncRequest2 = _interopRequireDefault(_syncRequest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction http_request(port) {\n\t// \"0.0.0.0\" won't work on Windows\n\t// (Error: connect EADDRNOTAVAIL 0.0.0.0:9999)\n\tvar response = (0, _syncRequest2.default)('GET', 'http://127.0.0.1:' + port, { timeout: 1000, socketTimeout: 1000 });\n\n\t// status codes 4xx have been already thrown before this line.\n\t// not sure about other status codes, so just in case:\n\tif (response.statusCode !== 200) {\n\t\tvar error = new Error(response.statusCode + ' ' + response.getBody('utf8'));\n\t\terror.code = response.statusCode;\n\t\tthrow error;\n\t}\n\n\treturn JSON.parse(response.getBody('utf8'));\n}\nmodule.exports = exports['default'];\n//# sourceMappingURL=synchronous http.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/helpers.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.exists = undefined;\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.is_object = is_object;\nexports.extend = extend;\nexports.merge = merge;\nexports.clone = clone;\nexports.convert_from_camel_case = convert_from_camel_case;\nexports.replace_all = replace_all;\nexports.starts_with = starts_with;\nexports.ends_with = ends_with;\nexports.is_empty = is_empty;\nexports.not_empty = not_empty;\nexports.repeat = repeat;\nexports.is_blank = is_blank;\nexports.zip = zip;\nexports.last = last;\nexports.camel_case = camel_case;\nexports.alias_properties_with_camel_case = alias_properties_with_camel_case;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// // if the variable is defined\nvar exists = exports.exists = function exists(what) {\n\treturn typeof what !== 'undefined';\n};\n\n// used for JSON object type checking\nvar object_constructor = {}.constructor;\n\n// detects a JSON object\nfunction is_object(object) {\n\treturn exists(object) && object !== null && object.constructor === object_constructor;\n}\n\n// extends the first object with \n/* istanbul ignore next: some weird transpiled code, not testable */\nfunction extend() {\n\tfor (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n\t\tobjects[_key] = arguments[_key];\n\t}\n\n\tobjects = objects.filter(function (x) {\n\t\treturn exists(x);\n\t});\n\n\tif (objects.length === 0) {\n\t\treturn;\n\t}\n\n\tif (objects.length === 1) {\n\t\treturn objects[0];\n\t}\n\n\tvar to = objects[0];\n\tvar from = objects[1];\n\n\tif (objects.length > 2) {\n\t\tvar _last = objects.pop();\n\t\tvar intermediary_result = extend.apply(this, objects);\n\t\treturn extend(intermediary_result, _last);\n\t}\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(from)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar key = _step.value;\n\n\t\t\tif (is_object(from[key])) {\n\t\t\t\tif (!is_object(to[key])) {\n\t\t\t\t\tto[key] = {};\n\t\t\t\t}\n\n\t\t\t\textend(to[key], from[key]);\n\t\t\t} else if (Array.isArray(from[key])) {\n\t\t\t\tif (!Array.isArray(to[key])) {\n\t\t\t\t\tto[key] = [];\n\t\t\t\t}\n\n\t\t\t\tto[key] = to[key].concat(clone(from[key]));\n\t\t\t} else {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n}\n\nfunction merge() {\n\tvar parameters = Array.prototype.slice.call(arguments, 0);\n\tparameters.unshift({});\n\treturn extend.apply(this, parameters);\n}\n\nfunction clone(object) {\n\tif (is_object(object)) {\n\t\treturn merge({}, object);\n\t} else if (Array.isArray(object)) {\n\t\treturn object.map(function (x) {\n\t\t\treturn clone(x);\n\t\t});\n\t} else {\n\t\treturn object;\n\t}\n}\n\n// converts all camelCased keys of an object to lodash style\nfunction convert_from_camel_case(object) {\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = (0, _getIterator3.default)((0, _keys2.default)(object)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar key = _step2.value;\n\n\t\t\tif (/[A-Z]/.test(key)) {\n\t\t\t\tvar lo_dashed_key = key.replace(/([A-Z])/g, function (match, group_1) {\n\t\t\t\t\treturn '_' + group_1.toLowerCase();\n\t\t\t\t});\n\n\t\t\t\tif (!exists(object[lo_dashed_key])) {\n\t\t\t\t\tobject[lo_dashed_key] = object[key];\n\t\t\t\t\tdelete object[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn object;\n}\n\nfunction escape_regexp(string) {\n\tvar specials = new RegExp(\"[.*+?|()\\\\[\\\\]{}\\\\\\\\]\", 'g');\n\treturn string.replace(specials, \"\\\\$&\");\n}\n\nfunction replace_all(where, what, with_what) {\n\tvar regexp = new RegExp(escape_regexp(what), 'g');\n\treturn where.replace(regexp, with_what);\n}\n\nfunction starts_with(string, substring) {\n\tvar j = substring.length;\n\n\tif (j > string.length) {\n\t\treturn false;\n\t}\n\n\twhile (j > 0) {\n\t\tj--;\n\n\t\tif (string[j] !== substring[j]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction ends_with(string, substring) {\n\tvar i = string.length;\n\tvar j = substring.length;\n\n\tif (j > i) {\n\t\treturn false;\n\t}\n\n\twhile (j > 0) {\n\t\ti--;\n\t\tj--;\n\n\t\tif (string[i] !== substring[j]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n\n\t// const index = string.lastIndexOf(substring)\n\t// return index >= 0 && index === string.length - substring.length\n}\n\nfunction is_empty(array) {\n\treturn array.length === 0;\n}\n\nfunction not_empty(array) {\n\treturn array.length > 0;\n}\n\n// repeat string N times\nfunction repeat(what, times) {\n\tvar result = '';\n\twhile (times > 0) {\n\t\tresult += what;\n\t\ttimes--;\n\t}\n\treturn result;\n}\n\n// if the text is blank\nfunction is_blank(text) {\n\treturn !exists(text) || !text.replace(/\\s/g, '');\n}\n\n// zips two arrays\nfunction zip(a, b) {\n\treturn a.map(function (_, index) {\n\t\treturn [a[index], b[index]];\n\t});\n}\n\n// last element of an array\nfunction last(array) {\n\treturn array[array.length - 1];\n}\n\n/**\r\n * Returns a camel case variant of the string, unless it's in TitleCase.\r\n * @param {string} string\r\n */\nfunction camel_case(string) {\n\tvar nameParts = string.split('_');\n\treturn nameParts.slice(1).reduce(function (reduced, current) {\n\t\treturn reduced + current.charAt(0).toUpperCase() + current.slice(1);\n\t}, nameParts[0]);\n}\n\n// detects \"private\" object properties (just in case there are any)\nvar is_private_property = function is_private_property(name) {\n\treturn starts_with(name, '__');\n};\n\n/**\r\n * Creates camel case variants of the attributes on the object\r\n * @param {object} object\r\n */\nfunction alias_properties_with_camel_case(object) {\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = (0, _getIterator3.default)((0, _keys2.default)(object).filter(function (key) {\n\t\t\treturn !is_private_property(key);\n\t\t})), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar key = _step3.value;\n\n\t\t\tobject[camel_case(key)] = object[key];\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n}\n//# sourceMappingURL=helpers.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/common.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.verbosity_levels = exports.is_package_path = exports.is_relative_path = exports.is_global_path = undefined;\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default_webpack_assets = default_webpack_assets;\nexports.normalize_options = normalize_options;\nexports.alias_hook = alias_hook;\nexports.normalize_asset_path = normalize_asset_path;\nexports.uniform_path = uniform_path;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _requireHacker = require('require-hacker');\n\nvar _requireHacker2 = _interopRequireDefault(_requireHacker);\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// returns a stub for webpack-assets.json if it doesn't exist yet\n// (because node.js and webpack are being run in parallel in development mode)\nfunction default_webpack_assets() {\n\tvar webpack_assets = {\n\t\tjavascript: {},\n\t\tstyles: {},\n\t\tassets: {}\n\t};\n\n\treturn webpack_assets;\n}\n\n// adds missing fields, etc\nfunction normalize_options(options) {\n\t// parameters check\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(options)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _key = _step.value;\n\n\t\t\tswitch (_key) {\n\t\t\t\tcase 'assets':\n\t\t\t\t\tif (!(0, _helpers.is_object)(options[_key])) {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'an object');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'debug':\n\t\t\t\t\tif (typeof options[_key] !== 'boolean') {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'a boolean');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'verbose':\n\t\t\t\t\tif (typeof options[_key] !== 'boolean') {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'a boolean');\n\t\t\t\t\t}\n\t\t\t\t\t// Legacy `verbose` option is converted to `verbosity`\n\t\t\t\t\tconsole.log('[webpack-isomorphic-tools] WARNING: `verbose` option is now called `verbosity`');\n\t\t\t\t\tif (options.verbose) {\n\t\t\t\t\t\toptions.verbosity = verbosity_levels.webpack_stats_for_each_build;\n\t\t\t\t\t}\n\t\t\t\t\tdelete options.verbose;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'verbosity':\n\t\t\t\t\tif (typeof options[_key] !== 'string') {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'a string');\n\t\t\t\t\t}\n\t\t\t\t\tif ((0, _keys2.default)(verbosity_levels).map(function (key) {\n\t\t\t\t\t\treturn verbosity_levels[key];\n\t\t\t\t\t}).indexOf(options[_key]) < 0) {\n\t\t\t\t\t\tthrow new Error('Unknown \"verbosity\" passed: ' + options[_key]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'port':\n\t\t\t\t\tif (typeof options[_key] !== 'number') {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'a number');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'webpack_assets_file_path':\n\t\t\t\tcase 'webpack_stats_file_path':\n\t\t\t\t\tif (typeof options[_key] !== 'string') {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'a string');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'alias':\n\t\t\t\t\tif (!(0, _helpers.is_object)(options[_key])) {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'an object');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'modules_directories':\n\t\t\t\t\tif (!Array.isArray(options[_key])) {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'an array');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'require_context':\n\t\t\t\t\tif (typeof options[_key] !== 'boolean') {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'a boolean');\n\t\t\t\t\t}\n\t\t\t\t\t// Legacy `require_context` option is converted to `patch_require`\n\t\t\t\t\tconsole.log('[webpack-isomorphic-tools] WARNING: `require_context` option is now called `patch_require`');\n\t\t\t\t\tdelete options.require_context;\n\t\t\t\t\toptions.patch_require = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'patch_require':\n\t\t\t\t\tif (typeof options[_key] !== 'boolean') {\n\t\t\t\t\t\tthrow new Error('\"' + _key + '\" configuration parameter must be ' + 'a boolean');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknown configuration parameter \"' + _key + '\"');\n\t\t\t}\n\t\t}\n\n\t\t// if no assets specified (for whatever reason), make it an empty array\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!options.assets) {\n\t\t// options.assets = {}\n\t\tthrow new Error('You must specify \"assets\" parameter in webpack-isomorphic-tools configuration');\n\t}\n\n\t// webpack-assets.json path, relative to the project base path\n\toptions.webpack_assets_file_path = options.webpack_assets_file_path || 'webpack-assets.json';\n\n\t// webpack-stats.json path, relative to the project base path\n\toptions.webpack_stats_file_path = options.webpack_stats_file_path || 'webpack-stats.json';\n\n\t// if Webpack aliases are supplied, validate them\n\tif (options.alias) {\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = (0, _getIterator3.default)((0, _keys2.default)(options.alias)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar key = _step2.value;\n\n\t\t\t\tif (typeof options.alias[key] !== 'string') {\n\t\t\t\t\tthrow new Error('Invalid alias for \"' + key + '\": \"' + options.alias[key] + '\"');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// generate names (if required) for each user defined asset type, normalize extensions\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = (0, _getIterator3.default)((0, _keys2.default)(options.assets)), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar asset_type = _step3.value;\n\n\t\t\tvar description = options.assets[asset_type];\n\n\t\t\t// normalize extensions\n\t\t\tif (description.extension) {\n\t\t\t\t// sanity check\n\t\t\t\tif (Array.isArray(description.extension)) {\n\t\t\t\t\tthrow new Error('Use \"extensions\" key instead of \"extension\" for specifying an array of file extensions for assets of type \"' + asset_type + '\"');\n\t\t\t\t}\n\n\t\t\t\t// sanity check\n\t\t\t\tif (typeof description.extension !== 'string') {\n\t\t\t\t\tthrow new Error('\"extension\" value must be a string for assets of type \"' + asset_type + '\"');\n\t\t\t\t}\n\n\t\t\t\t// normalize\n\t\t\t\tdescription.extensions = [description.extension];\n\t\t\t\tdelete description.extension;\n\t\t\t}\n\n\t\t\t// sanity check\n\t\t\tif (!description.extensions) {\n\t\t\t\tthrow new Error('You must specify file extensions for assets of type \"' + asset_type + '\"');\n\t\t\t}\n\n\t\t\t// parameters check\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = (0, _getIterator3.default)((0, _keys2.default)(description)), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar _key2 = _step4.value;\n\n\t\t\t\t\tswitch (_key2) {\n\t\t\t\t\t\tcase 'extensions':\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'exclude':\n\t\t\t\t\t\tcase 'include':\n\t\t\t\t\t\t\tif (!Array.isArray(description[_key2])) {\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _key2 + '\" must be an array for asset type \"' + asset_type + '\"');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfor (var _iterator5 = (0, _getIterator3.default)(description[_key2]), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\t\t\t\tvar clusion = _step5.value;\n\n\t\t\t\t\t\t\t\t\tif (typeof clusion !== 'string' && !(clusion instanceof RegExp) && typeof clusion !== 'function') {\n\t\t\t\t\t\t\t\t\t\tthrow new Error('Unsupported object type for exclusion/inclusion \"' + clusion + '\" for asset type \"' + asset_type + '\"');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'filter':\n\t\t\t\t\t\tcase 'parser':\n\t\t\t\t\t\tcase 'path':\n\t\t\t\t\t\t\tif (typeof description[_key2] !== 'function') {\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _key2 + '\" must be a function for asset type \"' + asset_type + '\"');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'regular_expression':\n\t\t\t\t\t\t\tif (!(description[_key2] instanceof RegExp)) {\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _key2 + '\" must be a regular expression for asset type \"' + asset_type + '\"');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'runtime':\n\t\t\t\t\t\t\tif (typeof description[_key2] !== 'boolean') {\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _key2 + '\" must be a boolean for asset type \"' + asset_type + '\"');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unknown property \"' + _key2 + '\" for asset type \"' + asset_type + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// alias the path if an alias is found,\n// and resolve it to a global filesystem path\nfunction alias_hook(path, module, project_path, aliases, log) {\n\t// possibly alias the path\n\tvar aliased_path = alias(path, aliases);\n\n\t// return if an alias not found\n\tif (!aliased_path) {\n\t\treturn;\n\t}\n\n\t// if an alias is found, require() the correct path\n\tlog.debug('require(\"' + path + '\") was called and an alias was found, so aliasing to module path \"' + aliased_path + '\"');\n\n\t// resolve the path to a real filesystem path (resolves `npm link`, etc)\n\tvar global_path = _requireHacker2.default.resolve(aliased_path, module);\n\tlog.debug(' resolved the path for the aliased module to ' + global_path);\n\n\treturn global_path;\n\n\t// const result = require(global_path)\n\t// // log.debug(` the path was found`)\n\n\t// return require_hacker.to_javascript_module_source(result)\n}\n\nvar is_global_path = exports.is_global_path = function is_global_path(path) {\n\treturn (0, _helpers.starts_with)(path, '/') || path.indexOf(':') > 0;\n};\nvar is_relative_path = exports.is_relative_path = function is_relative_path(path) {\n\treturn (0, _helpers.starts_with)(path, './') || (0, _helpers.starts_with)(path, '../');\n};\nvar is_package_path = exports.is_package_path = function is_package_path(path) {\n\treturn !is_relative_path(path) && !is_global_path(path);\n};\n\n// alias the path provided the aliases map\nfunction alias(path, aliases) {\n\t// if it's a path to a file - don't interfere\n\tif (!is_package_path(path)) {\n\t\treturn;\n\t}\n\n\t// extract module name from the path\n\tvar slash_index = path.indexOf('/');\n\tvar module_name = slash_index >= 0 ? path.substring(0, slash_index) : path;\n\tvar rest = slash_index >= 0 ? path.substring(slash_index) : '';\n\n\t// find an alias\n\tvar alias = aliases[module_name];\n\n\t// if an alias is found, require() the correct path\n\tif (alias) {\n\t\treturn alias + rest;\n\t}\n}\n\n// converts global asset path to local-to-the-project asset path\nfunction normalize_asset_path(global_asset_path, project_path) {\n\t// // if this path is outside project folder,\n\t// // return it as a global path\n\t// if (!starts_with(global_asset_path, project_path + path.sep))\n\t// {\n\t// \treturn global_asset_path\n\t// }\n\n\t// this path is inside project folder,\n\t// convert it to a relative path\n\n\t// asset path relative to the project folder\n\tvar asset_path = _path2.default.relative(project_path, global_asset_path);\n\n\t// for Windows:\n\t//\n\t// convert Node.js path to a correct Webpack path\n\tasset_path = uniform_path(asset_path);\n\n\treturn asset_path;\n}\n\n// for Windows:\n//\n// converts Node.js path to a correct Webpack path\nfunction uniform_path(asset_path) {\n\t// correct slashes\n\tasset_path = asset_path.replace(/\\\\/g, '/');\n\n\t// add './' in the beginning if it's missing (for example, in case of Windows)\n\tif (asset_path.indexOf('.') !== 0) {\n\t\tasset_path = './' + asset_path;\n\t}\n\n\treturn asset_path;\n}\n\nvar verbosity_levels = exports.verbosity_levels = {\n\tno_webpack_stats: 'no webpack stats',\n\twebpack_stats_for_each_build: 'webpack stats for each build'\n};\n//# sourceMappingURL=common.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/context.js":"// is used only in require.context() test\r\nif (require.context)\r\n{\r\n\tmodule.exports = require.context('./test/node_modules', true, /^\\.\\/.*\\.js$/)\r\n}\r\nelse\r\n{\r\n\tmodule.exports = { broken: true }\r\n}","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/ensure.js":"// is used only in require.ensure() test\nif (require.ensure)\n{\n\trequire.ensure('./test/node_modules/whatever', function(require)\n\t{\n\t\tmodule.exports = require('./test/node_modules/whatever')\n\t})\n}\nelse\n{\n\tmodule.exports = { broken: true }\n}","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/plugin.js":"module.exports = require('./babel-transpiled-modules/plugin/plugin')","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/plugin/plugin.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = Webpack_isomorphic_tools_plugin;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _writeAssets = require('./write assets');\n\nvar _writeAssets2 = _interopRequireDefault(_writeAssets);\n\nvar _notifyStats = require('./notify stats');\n\nvar _notifyStats2 = _interopRequireDefault(_notifyStats);\n\nvar _log = require('./../tools/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _helpers = require('./../helpers');\n\nvar _common = require('./../common');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// a Webpack plugin\nfunction Webpack_isomorphic_tools_plugin(options) {\n\t// take the passed in options\n\tthis.options = (0, _helpers.convert_from_camel_case)((0, _helpers.clone)(options));\n\n\t// add missing fields, etc\n\t(0, _common.normalize_options)(this.options);\n\n\t// logging\n\tthis.log = new _log2.default('webpack-isomorphic-tools/plugin', { debug: this.options.debug });\n\n\t// assets regular expressions (based on extensions).\n\t// will be used in loaders and in write_assets\n\tthis.regular_expressions = {};\n\n\t// for each user defined asset type\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(this.options.assets)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar asset_type = _step.value;\n\n\t\t\tvar description = this.options.assets[asset_type];\n\n\t\t\t// create a regular expression for this file extension (or these file extensions)\n\t\t\tthis.regular_expressions[asset_type] = description.regular_expression || Webpack_isomorphic_tools_plugin.regular_expression(description.extensions);\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// starts HTTP service in development mode\n// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/92\nWebpack_isomorphic_tools_plugin.prototype.start_dev_server = function () {\n\tvar _this = this;\n\n\tvar express = require('express');\n\tvar app = express();\n\n\tapp.get('/', function (request, response) {\n\t\tif (!_this.assets) {\n\t\t\treturn response.status(404).send('Webpack assets not generated yet');\n\t\t}\n\n\t\tresponse.send(_this.assets);\n\t});\n\n\tapp.listen(this.options.port, function () {\n\t\t_this.log.info('HTTP service listening on port ' + _this.options.port);\n\t});\n};\n\n// creates a regular expression for this file extension (or these file extensions)\nWebpack_isomorphic_tools_plugin.prototype.regular_expression = function (asset_type) {\n\tif (!(0, _helpers.exists)(this.regular_expressions[asset_type])) {\n\t\tthrow new Error('There\\'s no asset type \"' + asset_type + '\" defined in webpack-isomorphic-tools configuration. Perhaps you didn\\'t spell it correctly.');\n\t}\n\n\treturn this.regular_expressions[asset_type];\n};\n\n// shorthand alias\nWebpack_isomorphic_tools_plugin.prototype.regexp = Webpack_isomorphic_tools_plugin.prototype.regular_expression;\n\n// creates a regular expression for this file extension (or these file extensions)\nWebpack_isomorphic_tools_plugin.regular_expression = function (extensions) {\n\tif (!Array.isArray(extensions)) {\n\t\tthrow new Error('You were expected to pass a list of extensions (an array). Instead got: ' + extensions + '. Maybe you were looking for the instance method istead of the class method of this plugin?');\n\t}\n\n\tvar matcher = void 0;\n\tif (extensions.length > 1) {\n\t\tmatcher = '(' + extensions.join('|') + ')';\n\t} else {\n\t\tmatcher = extensions;\n\t}\n\n\treturn new RegExp('\\\\.' + matcher + '$');\n};\n\n// sets development mode flag to whatever was passed (or true if nothing was passed)\n// (development mode allows asset hot reloading when used with webpack-dev-server)\nWebpack_isomorphic_tools_plugin.prototype.development = function (flag) {\n\t// set development mode flag\n\tthis.options.development = (0, _helpers.exists)(flag) ? flag : true;\n\n\tif (this.options.development) {\n\t\tthis.log.debug('entering development mode');\n\t} else {\n\t\tthis.log.debug('entering production mode');\n\t}\n\n\t// allows method chaining\n\treturn this;\n};\n\n// applies the plugin to the Webpack build\nWebpack_isomorphic_tools_plugin.prototype.apply = function (compiler) {\n\t// start HTTP service in development mode\n\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/92\n\t//\n\t// (`.apply()` is only called once, so can start the dev server here)\n\t//\n\tif (this.options.development && this.options.port) {\n\t\tthis.start_dev_server();\n\t}\n\n\t// Webpack configuration\n\tvar webpack_configuration = compiler.options;\n\n\t// validate webpack configuration\n\tif (!webpack_configuration.context) {\n\t\tthrow new Error('You must specify \".context\" in your webpack configuration');\n\t}\n\n\t// project base path, required to output webpack-assets.json\n\tthis.options.project_path = webpack_configuration.context;\n\n\t// resolve webpack-assets.json file path\n\tvar webpack_assets_path = _path2.default.resolve(this.options.project_path, this.options.webpack_assets_file_path);\n\n\t// resolve webpack-stats.json file path\n\tvar webpack_stats_path = _path2.default.resolve(this.options.project_path, this.options.webpack_stats_file_path);\n\n\t// selfie\n\tvar plugin = this;\n\n\t// when all is done\n\t// https://github.com/webpack/docs/wiki/plugins\n\tcompiler.plugin('done', function (stats) {\n\t\tplugin.log.debug('------------------- Started -------------------');\n\n\t\tvar json = stats.toJson({\n\t\t\tcontext: webpack_configuration.context\n\t\t});\n\n\t\t// output some info to the console if in development mode\n\t\tif (plugin.options.development && plugin.options.verbosity !== _common.verbosity_levels.no_webpack_stats) {\n\t\t\t// outputs stats info to the console\n\t\t\t// (only needed in development mode)\n\t\t\t(0, _notifyStats2.default)(stats, json, plugin.options.verbosity === _common.verbosity_levels.webpack_stats_for_each_build);\n\t\t}\n\n\t\t// assets base path (on disk or on the network)\n\t\t//\n\t\t// (first search for the `devServer.publicPath` setting,\n\t\t//  then fallback to the generic `publicPath`)\n\t\t//\n\t\t// (using `publicPath` from webpack stats here\n\t\t//  as opposed to `webpack_configuration.output.publicPath`\n\t\t//  because it is processed by webpack replacing things like `[hash]`)\n\t\t//\n\t\tvar assets_base_url = process.env.NODE_ENV !== 'production' && webpack_configuration.devServer && webpack_configuration.devServer.publicPath ? webpack_configuration.devServer.publicPath : json.publicPath;\n\n\t\t// serve webpack assets from RAM rather than from disk\n\t\tvar serve_assets_from_memory = plugin.options.development && plugin.options.port;\n\n\t\t// write webpack-assets.json with assets info\n\t\t// and cache them in plugin instance\n\t\t// for later serving from HTTP service\n\t\tplugin.assets = (0, _writeAssets2.default)(json, {\n\t\t\tdevelopment: plugin.options.development,\n\t\t\tdebug: plugin.options.debug,\n\t\t\tassets: plugin.options.assets,\n\t\t\talias: plugin.options.alias,\n\t\t\tproject_path: plugin.options.project_path,\n\t\t\tassets_base_url: assets_base_url,\n\t\t\twebpack_assets_path: webpack_assets_path,\n\t\t\twebpack_stats_path: webpack_stats_path,\n\t\t\toutput: (0, _common.default_webpack_assets)(),\n\t\t\toutput_to_a_file: !serve_assets_from_memory,\n\t\t\tregular_expressions: plugin.regular_expressions\n\t\t}, plugin.log);\n\n\t\tplugin.log.debug('------------------- Finished -------------------');\n\t});\n};\n\n// a sample module source parser for webpack url-loader\n// (works for images, fonts, and i guess for everything else, should work for any file type)\nWebpack_isomorphic_tools_plugin.url_loader_parser = function (module, options, log) {\n\treturn module.source;\n};\n\n// a sample module source parser for webpack css-loader\n// (without css-loader \"modules\" feature support)\nWebpack_isomorphic_tools_plugin.css_loader_parser = function (module, options, log) {\n\treturn module.source + '\\n module.exports = module.exports.toString();';\n};\n\n// a sample module source parser for webpack css-loader\n// (with css-loader \"modules\" feature support)\nWebpack_isomorphic_tools_plugin.css_modules_loader_parser = function (module, options, log) {\n\treturn module.source + '\\n module.exports = exports.locals || {}; module.exports._style = exports.toString();';\n};\n\n// a filter for getting a css module when using it with style-loader\n//\n// in development mode there's webpack \"style-loader\",\n// so the module with module.name equal to the asset path is not what's needed\n// (because what that module does is it creates a <style/> tag on the page).\n// the module with the CSS styles is the one with a long name:\nWebpack_isomorphic_tools_plugin.style_loader_filter = function (module, regular_expression, options, log) {\n\tvar css_loader = module.name.split('!')[0];\n\treturn regular_expression.test(module.name) && (\n\t// The paths below have the form of \"/~/css-loader\"\n\t// and not the form of \"./~/css-loader\"\n\t// because in some (non-standard) cases\n\t// Webpack project context can be set\n\t// not to project root folder.\n\t//\n\t// For a discussion see:\n\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/pull/68\n\t// (there the `context` is set to the \"${project_root}/src\" folder\n\t//  so that the asset paths in `webpack-assets.json` wouldn't\n\t//  contain the \"./src\" prefix and therefore they will be found\n\t//  when require()d from code in \"./target\"\n\t//  which is compiled with Babel from the \"./src\" folder)\n\t//\n\t// I personally don't compile sources on the server side,\n\t// so I haven't thought of better ways of doing all that.\n\t//\n\tcss_loader.indexOf('/~/css-loader') > 0 || css_loader.indexOf('/~/.npminstall/css-loader') > 0 || css_loader.indexOf('/~/.store/css-loader') > 0);\n};\n\n// extracts css style file path\nWebpack_isomorphic_tools_plugin.style_loader_path_extractor = function (module, options, log) {\n\treturn module.name.slice(module.name.lastIndexOf('!') + 1);\n};\n\n// Doesn't work with Babel 6 compiler\n// // alias camel case for those who prefer it\n// alias_properties_with_camel_case(Webpack_isomorphic_tools_plugin.prototype)\n// alias_properties_with_camel_case(Webpack_isomorphic_tools_plugin)\n\n// camelCase aliases\n\nWebpack_isomorphic_tools_plugin.prototype.regularExpression = Webpack_isomorphic_tools_plugin.prototype.regular_expression;\n\nWebpack_isomorphic_tools_plugin.urlLoaderParser = Webpack_isomorphic_tools_plugin.url_loader_parser;\nWebpack_isomorphic_tools_plugin.cssLoaderParser = Webpack_isomorphic_tools_plugin.css_loader_parser;\nWebpack_isomorphic_tools_plugin.cssModulesLoaderParser = Webpack_isomorphic_tools_plugin.css_modules_loader_parser;\nWebpack_isomorphic_tools_plugin.styleLoaderFilter = Webpack_isomorphic_tools_plugin.style_loader_filter;\nWebpack_isomorphic_tools_plugin.styleLoaderPathExtractor = Webpack_isomorphic_tools_plugin.style_loader_path_extractor;\nmodule.exports = exports['default'];\n//# sourceMappingURL=plugin.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/plugin/write assets.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.default = write_assets;\nexports.extract_path = extract_path;\n\nvar _fsExtra = require('fs-extra');\n\nvar _fsExtra2 = _interopRequireDefault(_fsExtra);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _requireHacker = require('require-hacker');\n\nvar _requireHacker2 = _interopRequireDefault(_requireHacker);\n\nvar _serializeJavascript = require('../tools/serialize-javascript');\n\nvar _serializeJavascript2 = _interopRequireDefault(_serializeJavascript);\n\nvar _helpers = require('../helpers');\n\nvar _common = require('../common');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// one can supply a custom filter\nvar default_filter = function default_filter(module, regular_expression) {\n\treturn regular_expression.test(module.name);\n};\n// one can supply a custom namer\nvar default_asset_path = function default_asset_path(module) {\n\treturn module.name;\n};\n// one can supply a custom parser\nvar default_parser = function default_parser(module) {\n\treturn module.source;\n};\n\n// writes webpack-assets.json file, which contains assets' file paths\nfunction write_assets(json, options, log) {\n\t// take the passed in options\n\toptions = (0, _helpers.clone)(options);\n\n\tlog.debug('running write assets webpack plugin v' + require('../../package.json').version + ' with options', options);\n\n\t// make webpack stats accessible for asset functions (parser, path, filter)\n\toptions.webpack_stats = json;\n\n\tvar development = options.development;\n\n\tif (development) {\n\t\tlog.debug(' (development mode is on)');\n\t}\n\n\t// write webpack stats json for debugging purpose\n\tif (options.debug) {\n\t\t// write webpack stats file\n\t\tlog.debug('writing webpack stats to ' + options.webpack_stats_path);\n\n\t\t// write the file\n\t\t// (format the JSON for better readability)\n\t\t_fsExtra2.default.outputFileSync(options.webpack_stats_path, (0, _stringify2.default)(json, null, 2));\n\t}\n\n\t// the output object with assets\n\tvar output = options.output;\n\n\t// populate the output object with assets\n\tpopulate_assets(output, json, options, log);\n\n\t// write webpack assets info file\n\tif (options.output_to_a_file) {\n\t\t// format the JSON for better readability if in debug mode\n\t\tvar assets_info = development ? (0, _stringify2.default)(output, null, 2) : (0, _stringify2.default)(output);\n\n\t\t// rewrite `webpack-assets.json`\n\t\tvar rewrite = true;\n\n\t\t// for `webpack-assets.json` caching to work\n\t\t// chunks info should be moved out of it,\n\t\t// otherwise chunk hashsums constantly change,\n\t\t// and there won't be any caching.\n\t\t//\n\t\t// const assets_buffer = Buffer.from(assets_info)\n\t\t//\n\t\t// // if webpack-assets.json already exists,\n\t\t// // then maybe no need to rewrite it\n\t\t// if (fs.existsSync(options.webpack_assets_path))\n\t\t// {\n\t\t// \t// previously written webpack-assets.json\n\t\t// \tconst previous_assets_buffer = fs.readFileSync(options.webpack_assets_path)\n\t\t//\n\t\t// \t// if webpack-assets.json rewrite is not needed, then don't do it\n\t\t// \tif (assets_buffer.equals(previous_assets_buffer))\n\t\t// \t{\n\t\t// \t\trewrite = false\n\t\t// \t}\n\t\t// }\n\n\t\t// if webpack-assets.json rewrite is needed, then do it\n\t\tif (rewrite) {\n\t\t\tlog.debug('writing webpack assets info to ' + options.webpack_assets_path);\n\t\t\t// write the file\n\t\t\t_fsExtra2.default.outputFileSync(options.webpack_assets_path, assets_info);\n\t\t}\n\t} else {\n\t\tlog.debug('serving webpack assets from memory');\n\t}\n\n\t// return Webpack assets JSON object\n\t// for serving it through HTTP service\n\treturn output;\n}\n\n// populates the output object with assets\nfunction populate_assets(output, json, options, log) {\n\t// for each chunk name (\"main\", \"common\", ...)\n\t(0, _keys2.default)(json.assetsByChunkName).forEach(function (name) {\n\t\tlog.debug('getting javascript and styles for chunk \"' + name + '\"');\n\n\t\t// get javascript chunk real file path\n\n\t\tvar javascript = get_assets(name, 'js')[0];\n\t\t// the second asset is usually a source map\n\n\t\tif (javascript) {\n\t\t\tlog.debug(' (got javascript)');\n\t\t\toutput.javascript[name] = javascript;\n\t\t}\n\n\t\t// get style chunk real file path\n\n\t\tvar style = get_assets(name, 'css')[0];\n\t\t// the second asset is usually a source map\n\n\t\tif (style) {\n\t\t\tlog.debug(' (got style)');\n\t\t\toutput.styles[name] = style;\n\t\t}\n\t});\n\n\t// gets asset paths by name and extension of their chunk\n\tfunction get_assets(name) {\n\t\tvar extension = arguments.length <= 1 || arguments[1] === undefined ? 'js' : arguments[1];\n\n\t\tvar chunk = json.assetsByChunkName[name];\n\n\t\t// a chunk could be a string or an array, so make sure it is an array\n\t\tif (!Array.isArray(chunk)) {\n\t\t\tchunk = [chunk];\n\t\t}\n\n\t\treturn chunk\n\t\t// filter by extension\n\t\t.filter(function (name) {\n\t\t\treturn _path2.default.extname(extract_path(name)) === '.' + extension;\n\t\t})\n\t\t// adjust the real path (can be http, filesystem)\n\t\t.map(function (name) {\n\t\t\treturn options.assets_base_url + name;\n\t\t});\n\t}\n\n\t// 1st pass\n\tvar parsed_assets = {};\n\n\t// global paths to parsed asset paths\n\tvar global_paths_to_parsed_asset_paths = {};\n\n\t// define __webpack_public_path__ webpack variable\n\t// (resolves \"ReferenceError: __webpack_public_path__ is not defined\")\n\tvar define_webpack_public_path = 'var __webpack_public_path__ = ' + (0, _stringify2.default)(options.assets_base_url) + ';\\n';\n\n\t// for each user specified asset type\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tvar _loop = function _loop() {\n\t\t\tvar asset_type = _step.value;\n\n\t\t\t// asset type settings\n\t\t\tvar asset_type_settings = options.assets[asset_type];\n\n\t\t\t// one can supply his own filter\n\t\t\tvar filter = asset_type_settings.filter || default_filter; //.bind(this)\n\t\t\t// one can supply his own path parser\n\t\t\tvar extract_asset_path = asset_type_settings.path || default_asset_path; //.bind(this)\n\t\t\t// one can supply his own parser\n\t\t\tvar parser = asset_type_settings.parser || default_parser; //.bind(this)\n\n\t\t\t// guard agains typos, etc\n\n\t\t\t// for filter\n\t\t\tif (!asset_type_settings.filter) {\n\t\t\t\tlog.debug('No filter specified for \"' + asset_type + '\" assets. Using a default one.');\n\t\t\t}\n\n\t\t\t// for path parser\n\t\t\tif (!asset_type_settings.path) {\n\t\t\t\tlog.debug('No path parser specified for \"' + asset_type + '\" assets. Using a default one.');\n\t\t\t}\n\n\t\t\t// for parser\n\t\t\tif (!asset_type_settings.parser) {\n\t\t\t\tlog.debug('No parser specified for \"' + asset_type + '\" assets. Using a default one.');\n\t\t\t}\n\n\t\t\tlog.debug('parsing assets of type \"' + asset_type + '\"');\n\n\t\t\t// timer start\n\t\t\tvar began_at = new Date().getTime();\n\n\t\t\t// get real paths for all the files from this asset type\n\t\t\tjson.modules\n\t\t\t// take just modules of this asset type\n\t\t\t.filter(function (module) {\n\t\t\t\t// check that this asset is of the asset type\n\t\t\t\tif (!filter(module, options.regular_expressions[asset_type], options, log)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// guard against an empty source.\n\t\t\t\tif (!module.source) {\n\t\t\t\t\tlog.error('Module \"' + module.name + '\" has no source. Maybe Webpack compilation of this module failed. Skipping this asset.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// include this asset\n\t\t\t\treturn true;\n\t\t\t}).reduce(function (set, module) {\n\t\t\t\t// determine asset real path\n\t\t\t\tvar asset_path = extract_asset_path(module, options, log);\n\n\t\t\t\t// asset module source, or asset content (or whatever else)\n\t\t\t\tvar parsed_asset = parser(module, options, log);\n\n\t\t\t\tlog.trace('Adding asset \"' + asset_path + '\", module id ' + module.id + ' (in webpack-stats.json)');\n\n\t\t\t\t// check for naming collisions (just in case)\n\t\t\t\tif ((0, _helpers.exists)(set[asset_path])) {\n\t\t\t\t\tlog.error('-----------------------------------------------------------------');\n\t\t\t\t\tlog.error('Asset with path \"' + asset_path + '\" was overwritten because of path collision.');\n\t\t\t\t\tlog.error('Use the \"filter\" function of this asset type to narrow the results.');\n\t\t\t\t\tlog.error('Previous asset with this path:');\n\t\t\t\t\tlog.error(set[asset_path]);\n\t\t\t\t\tlog.error('New asset with this path:');\n\t\t\t\t\tlog.error(parsed_asset);\n\t\t\t\t\tlog.error('-----------------------------------------------------------------');\n\t\t\t\t}\n\n\t\t\t\t// add this asset to the list\n\t\t\t\t//\n\t\t\t\t// also resolve \"ReferenceError: __webpack_public_path__ is not defined\".\n\t\t\t\t// because it may be a url-loaded resource (e.g. a font inside a style).\n\t\t\t\tset[asset_path] = define_webpack_public_path + _requireHacker2.default.to_javascript_module_source(parsed_asset);\n\n\t\t\t\t// add path mapping\n\t\t\t\tglobal_paths_to_parsed_asset_paths[_path2.default.resolve(options.project_path, asset_path)] = asset_path;\n\n\t\t\t\t// continue\n\t\t\t\treturn set;\n\t\t\t}, parsed_assets);\n\n\t\t\t// timer stop\n\t\t\tlog.debug(' time taken: ' + (new Date().getTime() - began_at) + ' ms');\n\t\t};\n\n\t\tfor (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(options.assets)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t_loop();\n\t\t}\n\n\t\t// register a special require() hook for requiring() raw webpack modules\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar require_hook = _requireHacker2.default.global_hook('webpack-module', function (required_path, module) {\n\t\tlog.debug('require()ing \"' + required_path + '\"');\n\n\t\t// if Webpack aliases are supplied\n\t\tif (options.alias) {\n\t\t\t// possibly alias the path\n\t\t\tvar aliased_global_path = (0, _common.alias_hook)(required_path, module, options.project_path, options.alias, log);\n\n\t\t\t// if an alias is found\n\t\t\tif (aliased_global_path) {\n\t\t\t\tvar result = {\n\t\t\t\t\tsource: _requireHacker2.default.to_javascript_module_source(safe_require(aliased_global_path, log)),\n\t\t\t\t\tpath: aliased_global_path\n\t\t\t\t};\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\t// If the `required_path` is an npm package path\n\t\t// still can't simply `return` and fall back to default Node.js behaviour\n\t\t// because it could still be an asset like\n\t\t// `require('bootstrap/style.css')` inside `./style.css`.\n\t\t//\n\t\t// If the `required_path` is not an asset though\n\t\t// (which means \"has no extension\" in this case — should work)\n\t\t// then `require()` it as usual.\n\t\t//\n\t\tif (required_path.split(_path2.default.sep).slice(-1)[0].indexOf('.') === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// find an asset with this path\n\t\t//\n\t\t// the require()d path will be global path in case of the for..of require() loop\n\t\t// for the assets (the code a couple of screens below).\n\t\t//\n\t\t// (it can be anything in other cases (e.g. nested require() calls from the assets))\n\t\t//\n\t\tif ((0, _helpers.exists)(global_paths_to_parsed_asset_paths[required_path])) {\n\t\t\tlog.debug(' found in parsed assets');\n\n\t\t\tvar _result = {\n\t\t\t\tsource: parsed_assets[global_paths_to_parsed_asset_paths[required_path]],\n\t\t\t\tpath: required_path\n\t\t\t};\n\n\t\t\treturn _result;\n\t\t}\n\n\t\tlog.debug(' not found in parsed assets, searching in webpack stats');\n\n\t\t// find a webpack module which has a reason with this path\n\n\t\tvar candidates = [];\n\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = (0, _getIterator3.default)(json.modules), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar _module = _step2.value;\n\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator4 = (0, _getIterator3.default)(_module.reasons), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\tvar reason = _step4.value;\n\n\t\t\t\t\t\tif (reason.userRequest === required_path) {\n\t\t\t\t\t\t\tcandidates.push(_module);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// guard against ambiguity\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (candidates.length === 1) {\n\t\t\tlog.debug(' found in webpack stats, module id ' + candidates[0].id);\n\n\t\t\t// also resolve \"ReferenceError: __webpack_public_path__ is not defined\".\n\t\t\t// because it may be a url-loaded resource (e.g. a font inside a style).\n\n\t\t\tvar _result2 = {\n\t\t\t\tsource: define_webpack_public_path + candidates[0].source,\n\t\t\t\tpath: candidates[0].identifier\n\t\t\t};\n\n\t\t\treturn _result2;\n\t\t}\n\n\t\t// if there are more than one candidate for this require()d path,\n\t\t// then try to guess which one is the one require()d\n\n\t\tif (candidates.length > 1) {\n\t\t\tlog.debug(' More than a single candidate module was found in webpack stats for require()d path \"' + required_path + '\"');\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = (0, _getIterator3.default)(candidates), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar candidate = _step3.value;\n\n\t\t\t\t\tlog.debug(' ', candidate);\n\t\t\t\t}\n\n\t\t\t\t// (loaders matter so the program can't simply throw them away from the required path)\n\t\t\t\t//\n\t\t\t\t// // tries to normalize a cryptic Webpack loader path\n\t\t\t\t// // into a regular relative file path\n\t\t\t\t// // https://webpack.github.io/docs/loaders.html\n\t\t\t\t// let filesystem_required_path = last(required_path\n\t\t\t\t// \t.replace(/^!!/, '')\n\t\t\t\t// \t.replace(/^!/, '')\n\t\t\t\t// \t.replace(/^-!/, '')\n\t\t\t\t// \t.split('!'))\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar fail = function fail() {\n\t\t\t\tthrow new Error('More than a single candidate module was found in webpack stats for require()d path \"' + required_path + '\". Enable \"debug: true\" flag in webpack-isomorphic-tools configuration for more info.');\n\t\t\t};\n\n\t\t\t// https://webpack.github.io/docs/loaders.html\n\t\t\tvar is_webpack_loader_path = required_path.indexOf('!') >= 0;\n\n\t\t\t// if it's a Webpack loader-powered path, the code gives up\n\t\t\tif (is_webpack_loader_path) {\n\t\t\t\tfail();\n\t\t\t}\n\n\t\t\t// from here on it's either a filesystem path or an npm module path\n\n\t\t\t// if it's a global path it can be resolved right away\n\t\t\tif ((0, _common.is_global_path)(required_path)) {\n\t\t\t\tvar _result3 = {\n\t\t\t\t\tsource: _requireHacker2.default.to_javascript_module_source(safe_require(required_path, log)),\n\t\t\t\t\tpath: required_path\n\t\t\t\t};\n\n\t\t\t\treturn _result3;\n\t\t\t}\n\n\t\t\t// from here on it's either a relative filesystem path or an npm module path,\n\t\t\t// so it can be resolved against the require()ing file path (if it can be recovered).\n\n\t\t\t// `module.filename` here can be anything, not just a filesystem absolute path,\n\t\t\t// since some advanced require() hook trickery is involved.\n\t\t\t// therefore it will be parsed.\n\t\t\t//\n\t\t\tvar requiring_file_path = module.filename.replace(/\\.webpack-module$/, '');\n\n\t\t\t// if it's a webpack loader-powered path, then extract the filesystem path from it\n\t\t\tif (requiring_file_path.indexOf('!') >= 0) {\n\t\t\t\trequiring_file_path = requiring_file_path.substring(requiring_file_path.lastIndexOf('!') + 1);\n\t\t\t}\n\n\t\t\t// make relative path global\n\t\t\tif ((0, _common.is_relative_path)(requiring_file_path)) {\n\t\t\t\trequiring_file_path = _path2.default.resolve(options.project_path, requiring_file_path);\n\t\t\t}\n\n\t\t\t// if `requiring_file_path` is a filesystem path (not an npm module path),\n\t\t\t// then the require()d path can possibly be resolved\n\t\t\tif ((0, _common.is_global_path)(requiring_file_path)) {\n\t\t\t\tlog.debug(' The module is being require()d from \"' + requiring_file_path + '\", so resolving the path against this file');\n\n\t\t\t\t// if it's a relative path, can try to resolve it\n\t\t\t\tif ((0, _common.is_relative_path)(required_path)) {\n\t\t\t\t\tvar absolute_path = _path2.default.resolve(requiring_file_path, '..', required_path);\n\n\t\t\t\t\tvar _result4 = {\n\t\t\t\t\t\tsource: _requireHacker2.default.to_javascript_module_source(safe_require(absolute_path, log)),\n\t\t\t\t\t\tpath: absolute_path\n\t\t\t\t\t};\n\n\t\t\t\t\treturn _result4;\n\t\t\t\t}\n\n\t\t\t\t// if it's an npm module path (e.g. 'babel-runtime/core-js/object/assign'),\n\t\t\t\t// can try to require() it from the requiring asset path\n\t\t\t\tif ((0, _common.is_package_path)(required_path) && (0, _common.is_global_path)(module.filename)) {\n\t\t\t\t\tvar _absolute_path = _requireHacker2.default.resolve(required_path, module);\n\n\t\t\t\t\tvar _result5 = {\n\t\t\t\t\t\tsource: _requireHacker2.default.to_javascript_module_source(safe_require(_absolute_path, log)),\n\t\t\t\t\t\tpath: _absolute_path\n\t\t\t\t\t};\n\n\t\t\t\t\treturn _result5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if it's still here then it means it's either a\n\t\t\tfail();\n\t\t}\n\t});\n\n\tlog.debug('compiling assets');\n\n\t// timer start\n\tvar began_at = new Date().getTime();\n\n\t// evaluate parsed assets source code\n\tvar _iteratorNormalCompletion5 = true;\n\tvar _didIteratorError5 = false;\n\tvar _iteratorError5 = undefined;\n\n\ttry {\n\t\tfor (var _iterator5 = (0, _getIterator3.default)((0, _keys2.default)(parsed_assets)), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\tvar asset_path = _step5.value;\n\n\t\t\tvar compile = true;\n\n\t\t\t// If this asset should be compiled at runtime then skip its compilation.\n\t\t\t// (runtime compilation can be used for Webpack loaders returning\n\t\t\t//  javascript functions or React component classes — stuff like that,\n\t\t\t//  because it's not serializable to `webpack-assets.json`)\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = (0, _getIterator3.default)((0, _keys2.default)(options.assets)), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar _asset_type = _step6.value;\n\n\t\t\t\t\tif (options.regular_expressions[_asset_type].test(asset_path)) {\n\t\t\t\t\t\tif (options.assets[_asset_type].runtime) {\n\t\t\t\t\t\t\tcompile = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!compile) {\n\t\t\t\toutput.assets[asset_path] = parsed_assets[asset_path];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// set asset value\n\t\t\tlog.debug('compiling asset \"' + asset_path + '\"');\n\t\t\toutput.assets[asset_path] = safe_require(_path2.default.resolve(options.project_path, asset_path), log);\n\n\t\t\t// inside that require() call above\n\t\t\t// all the assets are resolved relative to this `module`,\n\t\t\t// which is irrelevant because they are all absolute filesystem paths.\n\t\t\t//\n\t\t\t// if in some of those assets a nested require() call is present\n\t\t\t// then it will be resolved relative to that asset folder.\n\t\t}\n\n\t\t// unmount the previously installed require() hook\n\t} catch (err) {\n\t\t_didIteratorError5 = true;\n\t\t_iteratorError5 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t_iterator5.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError5) {\n\t\t\t\tthrow _iteratorError5;\n\t\t\t}\n\t\t}\n\t}\n\n\trequire_hook.unmount();\n\n\t// timer stop\n\tlog.debug(' time taken: ' + (new Date().getTime() - began_at) + ' ms');\n}\n\nfunction safe_require(path, log) {\n\ttry {\n\t\treturn require(path);\n\t} catch (error) {\n\t\tlog.error(error);\n\t\treturn undefined;\n\t}\n}\n\nfunction extract_path(from) {\n\tvar question_mark_index = from.indexOf('?');\n\tif (question_mark_index === -1) {\n\t\treturn from;\n\t}\n\treturn from.slice(0, question_mark_index);\n}\n//# sourceMappingURL=write assets.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/tools/serialize-javascript.js":"/*\r\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\r\nCopyrights licensed under the New BSD License.\r\nSee the accompanying LICENSE file for terms.\r\n*/\n\n'use strict';\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar util = require('util');\n\nmodule.exports = serialize;\n\nvar IS_NATIVE_CODE_REGEX = /\\{\\s*\\[native code\\]\\s*\\}/g,\n    PLACE_HOLDER_REGEX = /\"@__(FUNCTION|REGEXP)_(\\d+)__@\"/g,\n    UNSAFE_CHARS_REGEX = /[<>\\/\\u2028\\u2029]/g;\n\n// Mapping of unsafe HTML and invalid JavaScript line terminator chars to their\n// Unicode char counterparts which are safe to use in JavaScript strings.\nvar UNICODE_CHARS = {\n    '<': '\\\\u003C',\n    '>': '\\\\u003E',\n    '/': '\\\\u002F',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n};\n\nfunction serialize(obj) {\n    var functions = [],\n        regexps = [],\n        str;\n\n    // Creates a JSON string representation of the object and uses placeholders\n    // for functions and regexps (identified by index) which are later\n    // replaced.\n    str = (0, _stringify2.default)(obj, function (key, value) {\n        if (typeof value === 'function') {\n            return '@__FUNCTION_' + (functions.push(value) - 1) + '__@';\n        }\n\n        if (util.isRegExp(value)) {\n            return '@__REGEXP_' + (regexps.push(value) - 1) + '__@';\n        }\n\n        return value;\n    });\n\n    // Protects against `JSON.stringify()` returning `undefined`, by serializing\n    // to the literal string: \"undefined\".\n    if (typeof str !== 'string') {\n        return String(str);\n    }\n\n    // // Replace unsafe HTML and invalid JavaScript line terminator chars with\n    // // their safe Unicode char counterpart. This _must_ happen before the\n    // // regexps and functions are serialized and added back to the string.\n    // str = str.replace(UNSAFE_CHARS_REGEX, function (unsafeChar) {\n    //     return UNICODE_CHARS[unsafeChar];\n    // });\n\n    if (!(functions.length || regexps.length)) {\n        return str;\n    }\n\n    // Replaces all occurrences of function and regexp placeholders in the JSON\n    // string with their string representations. If the original value can not\n    // be found, then `undefined` is used.\n    return str.replace(PLACE_HOLDER_REGEX, function (match, type, index) {\n        if (type === 'REGEXP') {\n            return regexps[index].toString();\n        }\n\n        var fn = functions[index],\n            serializedFn = fn.toString();\n\n        if (IS_NATIVE_CODE_REGEX.test(serializedFn)) {\n            throw new TypeError('Serializing native function: ' + fn.name);\n        }\n\n        return serializedFn;\n    });\n}\n//# sourceMappingURL=serialize-javascript.js.map","/home/travis/build/npmtest/node-npmtest-webpack-isomorphic-tools/node_modules/webpack-isomorphic-tools/babel-transpiled-modules/plugin/notify stats.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = notify_stats;\n\nvar _safe = require('colors/safe');\n\nvar _safe2 = _interopRequireDefault(_safe);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction error(error) {\n\tconsole.error(_safe2.default.red(error));\n} // outputs webpack stats to console if there are no errors or warnings\n\nfunction warning(warning) {\n\tconsole.log(_safe2.default.yellow(warning));\n}\n\nvar first_run = true;\nvar was_faulty = false;\n\nfunction notify_stats(stats, json, verbose) {\n\t// if there were any errors\n\tif (json.errors && json.errors.length > 0) {\n\t\twas_faulty = true;\n\t\treturn json.errors.forEach(error);\n\t}\n\n\t// if there were any warnings\n\tif (json.warnings && json.warnings.length > 0) {\n\t\tjson.warnings.forEach(warning);\n\t}\n\n\t// if it's ok\n\n\tif (!verbose && !first_run && was_faulty) {\n\t\t// green colour\n\t\tconsole.log(_safe2.default.green('~ Webpack build status: OK ~'));\n\n\t\twas_faulty = false;\n\t}\n\n\tif (verbose || first_run) {\n\t\tconsole.log(stats.toString({\n\t\t\tchunks: false,\n\t\t\tcolors: true\n\t\t}));\n\n\t\tfirst_run = false;\n\t}\n}\nmodule.exports = exports['default'];\n//# sourceMappingURL=notify stats.js.map"}